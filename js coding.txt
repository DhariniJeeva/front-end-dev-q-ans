1. find missing numbers in unsorted array? 

const ary = [2,1,4,7,8,50,89,62,100];

function findMiss(a){
  const sortedArr = a.sort((a,b) => a-b);

	for(var i = 1; i< sortedArr.length ; i++){
        if(sortedArr[i] !== i ){
        		return sortedArr[i];
        }
        else{
        	console.log("gfdgd");
        }
  }
}

console.log(findMiss(ary));

2. diff between function declaration and expression 


The main difference between a function expression and a function statement is the function name, which can be omitted in function expressions to create anonymous functions. A function expression can be used as a IIFE (Immediately Invoked Function Expression) which runs as soon 

Function declarations load before any code is executed.

Function expressions load only when the interpreter reaches that line of code.

So if you try to call a function expression before it's loaded, you'll get an error! If you call a function declaration instead, it'll always work, because no code can be called until all declarations are loaded.

3. const til = {
    dollar : 30,
    nickel : 5,
    quarter : 25,
    dimes : 10,
    penny : 1
}

subtract number = 20.47 from til and give rest.. 
ans :

function calc(number){
    let cT = number * 100 ; // 2047
    
  let  re = cT % til.dollar ;
    
    let dollar = cT.re ;
    
}

4. let c = "I love JavaScript" ;

console.log(c.split("").reverse().join(""));

5. find the minimum sum and maximum sum from the array..


const a = [10,5,6,7,8];

function findMax(aa){
	var n = Math.min(...aa);
  var m = Math.max(...aa);
  
  const minSum = aa.reduce((acc, item) => acc + item) - n ;
  const maxSum =  aa.reduce((acc, item) => acc + item) - m ;
  
  return JSON.stringify({maxSum:maxSum ,minSum:minSum});
}

alert(findMax(a));


6. find the length of the number without converting to string? 

function count_digits(n) {
    numDigits = 0;
    integers = Math.abs(n);

    while (integers > 0) {
        integers = (integers - integers % 10) / 10;
        numDigits++;
    }
    return numDigits;
}













